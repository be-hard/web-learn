/**
 * 等待一段时间后,触发某操作
 * @param {Number} delay - 延迟时间
 * @returns {Promise}
 */
export function wait(delay = 1000) {
  return new Promise((resolve) => {
    setTimeout(resolve, delay);
  });
}

// 拆分版本号字符串
const splitVersion = versionStr => {
  return versionStr.split('.').map(item => parseInt(item, 10));
};

// 比较版本号大小，0表示相等，-1表示A比B老，1表示A比B新
const compareVeision = (version1, version2) => {
  console.log(version1, version2);
  const version1Arr = splitVersion(version1);
  const version2Arr = splitVersion(version2);
  const len = version1Arr.length;
  for (let i = 0; i < len; i++) {
    const gap = (version1Arr[i] || 0) - (version2Arr[i] || 0);
    if (gap !== 0) {
      return gap;
    }
  }
  return 0;
};

